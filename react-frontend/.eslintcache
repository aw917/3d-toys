[{"/Users/andreww/seir/final_project_3dimensional/react-frontend/src/index.js":"1","/Users/andreww/seir/final_project_3dimensional/react-frontend/src/App.js":"2","/Users/andreww/seir/final_project_3dimensional/react-frontend/src/reportWebVitals.js":"3","/Users/andreww/seir/final_project_3dimensional/react-frontend/src/Components/Home/Home.jsx":"4","/Users/andreww/seir/final_project_3dimensional/react-frontend/src/Components/Menu/Menu.jsx":"5","/Users/andreww/seir/final_project_3dimensional/react-frontend/src/Components/Visualizations/Cube.jsx":"6","/Users/andreww/seir/final_project_3dimensional/react-frontend/src/Components/Visualizations/Cube_Form.jsx":"7","/Users/andreww/seir/final_project_3dimensional/react-frontend/src/Components/Visualizations/Diamond.jsx":"8","/Users/andreww/seir/final_project_3dimensional/react-frontend/src/Components/Visualizations/Effects.js":"9"},{"size":750,"mtime":1611767142354,"results":"10","hashOfConfig":"11"},{"size":855,"mtime":1611766406190,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1611592025152,"results":"13","hashOfConfig":"11"},{"size":190,"mtime":1611596061817,"results":"14","hashOfConfig":"11"},{"size":692,"mtime":1611600033623,"results":"15","hashOfConfig":"11"},{"size":6128,"mtime":1611774082695,"results":"16","hashOfConfig":"11"},{"size":4151,"mtime":1611774081810,"results":"17","hashOfConfig":"11"},{"size":3437,"mtime":1611863097917,"results":"18","hashOfConfig":"11"},{"size":1530,"mtime":1611774083745,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1lczm6i",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/andreww/seir/final_project_3dimensional/react-frontend/src/index.js",[],["43","44"],"/Users/andreww/seir/final_project_3dimensional/react-frontend/src/App.js",[],"/Users/andreww/seir/final_project_3dimensional/react-frontend/src/reportWebVitals.js",[],"/Users/andreww/seir/final_project_3dimensional/react-frontend/src/Components/Home/Home.jsx",["45","46","47"],"import { Route, Link, Switch } from \"react-router-dom\";\n\nconst Home = () => {\n    return (\n        <>\n           <h1>Welcome to the visualizer!</h1>\n        </>\n    )\n}\n\nexport default Home;","/Users/andreww/seir/final_project_3dimensional/react-frontend/src/Components/Menu/Menu.jsx",["48","49","50"],"import { Route, Link, Switch } from \"react-router-dom\";\n\nconst Home = () => {\n    const visualizations = [\n        {name: \"cube\", img: \"\"},\n        {name: \"diamond\", img: \"\"},\n        {name: \"sphere\", img: \"\"},\n        {name: \"image\", img: \"\"},\n        {name: \"wild\", img: \"\"}\n    ]\n    return (\n        <>\n           <h1>Visualizations</h1>\n           {\n               visualizations.map((el, index) => {\n                   return (\n                    <div className=\"visualizations-container\">\n                        <a href={`/${el.name}`} >{el.name}</a>\n                    </div>\n                   )\n               })\n           }\n           \n        </>\n    )\n}\n\nexport default Home;","/Users/andreww/seir/final_project_3dimensional/react-frontend/src/Components/Visualizations/Cube.jsx",["51","52"],"// Code taken from https://github.com/lwmaranto/react-three-interactive \n\nimport React, { Component, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport ShapeForm from \"./Cube_Form\";\n\nconst style = {\n  height: 500, // we can control scene size by setting container dimensions\n  // width: \"85vw\",\n  // marginLeft: \"50%\",\n  // transform: \"translateX(-50%)\",\n};\n\nclass Cube extends Component {\n  constructor(props) {\n    super(props);\n    this.sceneSetup = this.sceneSetup.bind(this);\n    this.addCustomSceneObjects = this.addCustomSceneObjects.bind(this);\n    // this.generateMultipleCubes = this.generateMultipleCubes.bind(this);\n    this.startAnimationLoop = this.startAnimationLoop.bind(this);\n  }\n\n  componentDidMount() {\n    this.sceneSetup();\n    this.addCustomSceneObjects();\n    // this.generateMultipleCubes();\n    this.startAnimationLoop();\n    window.addEventListener(\"resize\", this.handleWindowResize);\n  }\n\n  componentDidUpdate() {\n    this.scene.clear();\n    this.addCustomSceneObjects();\n  }\n\n  sceneSetup() {\n    // this.el is a useRef\n    const width = this.el.clientWidth;\n    const height = this.el.clientHeight;\n\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(\n      75, // fov = field of view\n      width / height, // aspect ratio\n      0.1, // near plane\n      1000 // far plane\n    );\n    this.controls = new OrbitControls(this.camera, this.el);\n    // set some distance from a cube that is located at z = 0\n    this.camera.position.z = 50;\n\n    this.scene.background = new THREE.Color(\"black\");\n\n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.setSize(width, height);\n    this.el.appendChild(this.renderer.domElement); // mount using React ref};\n  }\n\n  addCustomSceneObjects() {\n    const geometry = new THREE.BoxGeometry(\n      this.props.shapeLength,\n      this.props.shapeWidth,\n      this.props.shapeHeight\n    );\n\n    const material = new THREE.MeshPhongMaterial({\n      color: this.props.shapeColor,\n      side: THREE.DoubleSide,\n      flatShading: true,\n      shininess: 100,\n      wireframe: this.props.wireFrame\n    });\n    \n    this.cube = new THREE.Mesh(geometry, material);\n\n    this.cube.position.x = 0;\n    this.cube.position.y = 0;\n    this.cube.position.z = 0;\n\n    this.scene.add(this.cube);\n\n    const lights = [];\n    lights[0] = new THREE.PointLight(\"lightblue\", 1, 0);\n    lights[1] = new THREE.PointLight(\"lightblue\", 1, 0);\n    lights[2] = new THREE.PointLight(\"lightblue\", 1, 0);\n\n    lights[0].position.set(0, 200, 0);\n    lights[1].position.set(100, 200, 100);\n    lights[2].position.set(-100, -200, -100);\n\n    this.scene.add(lights[0]);\n    this.scene.add(lights[1]);\n    this.scene.add(lights[2]);\n    \n    // console.log(this.cube);\n\n    // this.generateMultipleCubes();\n  }\n\n  startAnimationLoop() {\n    this.renderer.render(this.scene, this.camera);\n    this.requestID = window.requestAnimationFrame(this.startAnimationLoop);\n  }\n\n  handleWindowResize() {\n    const width = this.el.clientWidth;\n    const height = this.el.clientHeight;\n\n    this.renderer.setSize(width, height);\n    this.camera.aspect = width / height;\n    this.camera.updateProjectionMatrix();\n  }\n\n  // generateMultipleCubes() {\n  //   let numberOfCubes = this.props.numberOfCubes;\n  //   for (let i = 1; i < numberOfCubes; i++) {\n  //     console.log(this.cube)\n  //     this.addCustomSceneObjects();\n  //     // Positioning logic for a 3 x 5 grid of cubes\n  //     if (i % 2 === 0 && i < 5) {\n  //       this.cube.position.x = (this.cube.geometry.parameters.width * i) + (i);\n  //     } else {\n  //       this.cube.position.x = 0 - (this.cube.geometry.parameters.width * i) - (i);\n  //     }\n  //     if (i >= 5) {\n  //       this.cube.position.y = this.cube.geometry.parameters.height + 1\n  //       if (i % 2 ===0) {\n  //         this.cube.position.x = (this.cube.geometry.parameters.width * (i - 5)) + (i - 5);\n  //       } else {\n  //         this.cube.position.x = 0 - (this.cube.geometry.parameters.width * (i - 5)) - (i - 5);\n  //       }\n  //     }\n  //     if (i >= 10) {\n  //       this.cube.position.y = 0 - this.cube.geometry.parameters.height - 1\n  //       if (i % 2 ===0) {\n  //         this.cube.position.x = (this.cube.geometry.parameters.width * (i - 10)) + (i - 10);\n  //       } else {\n  //         this.cube.position.x = 0 - (this.cube.geometry.parameters.width * (i - 10)) - (i - 10);\n  //       }\n  //     }\n  //     if (i > 15) {\n  //       alert(`That's too many cubes!`);\n  //     }\n  //   }\n  // }\n\n  render() {\n    return <div style={style} ref={(ref) => (this.el = ref)} />;\n  }\n}\n\nclass Container extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shapeLength: 15, //the starting length for the shape\n      shapeWidth: 15, //the starting width for the shape\n      shapeHeight: 15, //the starting height for the shape\n      shapeColor: \"hotpink\",\n      wireFrame: false\n    }\n    // this.numberOfCubes = 1;\n    this.onShapeChange = this.onShapeChange.bind(this);\n  }\n\n  onShapeChange(shapeState) {\n    this.setState(shapeState);\n    // this.numberOfCubes = this.numberOfCubes.current;\n  }\n\n  render() {\n    return (\n      <>\n        <Cube\n          onShapeChange={this.onShapeChange}\n          shapeLength={this.state.shapeLength}\n          shapeWidth={this.state.shapeWidth}\n          shapeHeight={this.state.shapeHeight}\n          shapeColor={this.state.shapeColor}\n          // numberOfCubes={this.numberOfCubes}\n          wireFrame={this.state.wireFrame}\n        />\n        <p>Scroll to zoom, drag to rotate</p>\n        <div>\n          <ShapeForm\n            onShapeChange={this.onShapeChange}\n            shapeLength={this.state.shapeLength}\n            shapeWidth={this.state.shapeWidth}\n            shapeHeight={this.state.shapeHeight}\n            shapeColor={this.state.shapeColor}\n            // numberOfCubes={this.numberOfCubes}\n            wireFrame={this.state.wireFrame}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Container;","/Users/andreww/seir/final_project_3dimensional/react-frontend/src/Components/Visualizations/Cube_Form.jsx",["53","54","55"],"// Code taken from https://github.com/lwmaranto/react-three-interactive \n\nimport React, { useRef } from \"react\";\n\nexport default class ShapeForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shapeLength: props.shapeLength,\n      shapeWidth: props.shapeWidth,\n      shapeHeight: props.shapeHeight,\n      shapeColor: props.shapeColor,\n      // num of cubes\n      wireFrame: props.wireFrame\n    }\n\n    // this.numberOfCubes = React.createRef();\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // checkbox log from http://react.tips/checkboxes-in-react/\n\n\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: (evt.target.value),\n    });\n  }\n\n  handleSubmit(evt) {\n    evt.preventDefault();\n    this.props.onShapeChange(this.state);\n  }\n\n  render() {\n    const shapeLength = this.state.shapeLength;\n    const shapeWidth = this.state.shapeWidth;\n    const shapeHeight = this.state.shapeHeight;\n    const shapeColor = this.state.shapeColor;\n    // const numberOfCubes = this.numberOfCubes;\n    const wireFrame = this.state.wireFrame;\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <fieldset>\n            <label htmlFor=\"shapeLength\">\n              {\" \"}\n              Length{\" \"}\n              <span className={shapeLength ? \"\" : \"warning\"}>\n                (required)\n              </span>\n            </label>\n            <input\n              onChange={this.handleChange}\n              name=\"shapeLength\"\n              type=\"number\"\n              min=\"1\"\n              value={shapeLength}\n            />\n\n            <label htmlFor=\"shapeWidth\">\n              {\" \"}\n              Width{\" \"}\n              <span className={shapeWidth ? \"\" : \"warning\"}>\n                (required)\n              </span>\n            </label>\n            <input\n              onChange={this.handleChange}\n              name=\"shapeWidth\"\n              type=\"number\"\n              min=\"1\"\n              value={shapeWidth}\n            />\n\n            <label htmlFor=\"shapeHeight\">\n              {\" \"}\n              Height{\" \"}\n              <span className={shapeHeight ? \"\" : \"warning\"}>\n                (required)\n              </span>\n            </label>\n            <input\n              onChange={this.handleChange}\n              name=\"shapeHeight\"\n              type=\"number\"\n              min=\"1\"\n              value={shapeHeight}\n            />\n\n            {/* <label htmlFor=\"numberOfCubes\">\n              {\" \"}\n              Number of Cubes{\" \"}\n              <span className={numberOfCubes ? \"\" : \"warning\"}>\n                (required)\n              </span>\n            </label>\n            <input\n              onChange={this.handleChange}\n              name=\"numberOfCubes\"\n              type=\"number\"\n              min=\"1\"\n              value={numberOfCubes}\n            /> */}\n\n            <label htmlFor=\"shapeColor\">\n              {\" \"}\n              Shape Color{\" \"}\n              <span className={shapeColor ? \"\" : \"warning\"}>\n                (optional)\n              </span>\n            </label>\n            <input\n              onChange={this.handleChange}\n              name=\"shapeColor\"\n              type=\"text\"\n              value={shapeColor}\n            />\n\n             <label htmlFor=\"wireFrame\">\n              {\" \"}\n              Toggle Wireframe{\" \"}\n              <span className={wireFrame ? \"\" : \"warning\"}>\n                (optional)\n              </span>\n            </label>\n            <input\n              // onChange={this.handleChange}\n              name=\"wireFrame\"\n              type=\"checkbox\"\n              value={wireFrame}\n              // checked={false}\n              onChange={(e) => {\n                if (this.state.wireFrame === true) {\n                  this.state.wireFrame = false;\n                } else {\n                  this.state.wireFrame = true;\n                }\n              }}\n            />\n            <button className=\"button\" type=\"submit\">\n              render\n            </button>\n          </fieldset>\n        </form>\n      </div>\n    );\n  }\n}","/Users/andreww/seir/final_project_3dimensional/react-frontend/src/Components/Visualizations/Diamond.jsx",["56"],"/Users/andreww/seir/final_project_3dimensional/react-frontend/src/Components/Visualizations/Effects.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":10,"nodeType":"63","messageId":"64","endLine":1,"endColumn":15},{"ruleId":"61","severity":1,"message":"65","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":21},{"ruleId":"61","severity":1,"message":"66","line":1,"column":23,"nodeType":"63","messageId":"64","endLine":1,"endColumn":29},{"ruleId":"61","severity":1,"message":"62","line":1,"column":10,"nodeType":"63","messageId":"64","endLine":1,"endColumn":15},{"ruleId":"61","severity":1,"message":"65","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":21},{"ruleId":"61","severity":1,"message":"66","line":1,"column":23,"nodeType":"63","messageId":"64","endLine":1,"endColumn":29},{"ruleId":"61","severity":1,"message":"67","line":3,"column":28,"nodeType":"63","messageId":"64","endLine":3,"endColumn":34},{"ruleId":"61","severity":1,"message":"68","line":4,"column":8,"nodeType":"63","messageId":"64","endLine":4,"endColumn":16},{"ruleId":"61","severity":1,"message":"67","line":3,"column":17,"nodeType":"63","messageId":"64","endLine":3,"endColumn":23},{"ruleId":"69","severity":1,"message":"70","line":137,"column":19,"nodeType":"71","endLine":137,"endColumn":29},{"ruleId":"69","severity":1,"message":"70","line":139,"column":19,"nodeType":"71","endLine":139,"endColumn":29},{"ruleId":"61","severity":1,"message":"68","line":3,"column":8,"nodeType":"63","messageId":"64","endLine":3,"endColumn":16},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Switch' is defined but never used.","'useRef' is defined but never used.","'ReactDOM' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-global-assign","no-unsafe-negation"]